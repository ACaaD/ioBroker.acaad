{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["import 'reflect-metadata';\r\n\r\nimport * as utils from '@iobroker/adapter-core';\r\nimport { DependencyContainer } from 'tsyringe';\r\nimport {\r\n  FrameworkContainer,\r\n  ComponentManager,\r\n  IConnectedServiceAdapter,\r\n  IConnectedServiceContext\r\n} from '@acaad/core';\r\n\r\nimport { IoBrokerContext } from './services/IoBroker.Context';\r\nimport { IoBrokerCsAdapter } from './services/IoBroker.ConnectedServiceAdapter';\r\n\r\nimport { Option, pipe } from 'effect';\r\n\r\nclass Acaad extends utils.Adapter {\r\n  private _fwkContainer: DependencyContainer;\r\n  private _componentManager: Option.Option<ComponentManager> = Option.none();\r\n\r\n  // Not using Option here for performance reasons.\r\n  private _context: IoBrokerContext | null = null;\r\n\r\n  public constructor(options: Partial<utils.AdapterOptions> = {}) {\r\n    super({\r\n      ...options,\r\n      name: 'acaad'\r\n    });\r\n    this.on('ready', this.onReady.bind(this));\r\n    this.on('stateChange', this.onStateChange.bind(this));\r\n\r\n    this.on('unload', this.onUnload.bind(this));\r\n\r\n    if (!this.config.targetServices) {\r\n      this.config.targetServices = [];\r\n    }\r\n\r\n    if (!this.config.auth) {\r\n      // TODO: Raise an error later.\r\n      // Here the logger is not yet available.\r\n      console.log('No auth provided.');\r\n    }\r\n\r\n    this._fwkContainer = this.createDiContainer();\r\n  }\r\n\r\n  private createDiContainer(): DependencyContainer {\r\n    const ioBrokerContext = new IoBrokerContext(this);\r\n    const contextToken = IoBrokerContext.Token;\r\n\r\n    return FrameworkContainer.CreateCsContainer<IConnectedServiceAdapter>({\r\n      useClass: IoBrokerCsAdapter\r\n    })\r\n      .WithContext<IConnectedServiceContext>(contextToken, ioBrokerContext)\r\n      .Build();\r\n  }\r\n\r\n  private async onReady(): Promise<void> {\r\n    const instance = this._fwkContainer.resolve(ComponentManager) as ComponentManager;\r\n    this._componentManager = Option.some(instance);\r\n\r\n    const componentCreation = await instance.createMissingComponentsAsync();\r\n\r\n    if (componentCreation) {\r\n      await instance.startAsync();\r\n    } else {\r\n      console.log('Failed to create components.');\r\n      // TODO: Stop the adapter\r\n    }\r\n  }\r\n\r\n  private async onUnload(callback: () => void): Promise<void> {\r\n    try {\r\n      // TODO: Add AbortController+Signal to limit shutdown duration, if necessary force-stop.\r\n      // Alternatively, fork (?) an effect and race it as timeout.\r\n\r\n      await pipe(\r\n        this._componentManager,\r\n        Option.match({\r\n          onSome: (cm) => cm.shutdownAsync(), // TODO: Add timeout\r\n          onNone: () => Promise.resolve()\r\n        })\r\n      );\r\n    } finally {\r\n      await this._fwkContainer.dispose();\r\n      callback();\r\n    }\r\n  }\r\n\r\n  private async onStateChange(id: string, state: ioBroker.State | null | undefined): Promise<void> {\r\n    await (this._context ??= this._fwkContainer.resolve(\r\n      IoBrokerContext.Token\r\n    ) as IoBrokerContext).onStateChangeAsync(id, state);\r\n  }\r\n}\r\n\r\nif (require.main !== module) {\r\n  module.exports = (options: Partial<utils.AdapterOptions> | undefined) => new Acaad(options);\r\n} else {\r\n  (() => new Acaad())();\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA,8BAAO;AAEP,YAAuB;AAEvB,kBAKO;AAEP,sBAAgC;AAChC,IAAAA,mBAAkC;AAElC,oBAA6B;AAE7B,MAAM,cAAc,MAAM,QAAQ;AAAA,EACxB;AAAA,EACA,oBAAqD,qBAAO,KAAK;AAAA;AAAA,EAGjE,WAAmC;AAAA,EAEpC,YAAY,UAAyC,CAAC,GAAG;AAC9D,UAAM;AAAA,MACJ,GAAG;AAAA,MACH,MAAM;AAAA,IACR,CAAC;AACD,SAAK,GAAG,SAAS,KAAK,QAAQ,KAAK,IAAI,CAAC;AACxC,SAAK,GAAG,eAAe,KAAK,cAAc,KAAK,IAAI,CAAC;AAEpD,SAAK,GAAG,UAAU,KAAK,SAAS,KAAK,IAAI,CAAC;AAE1C,QAAI,CAAC,KAAK,OAAO,gBAAgB;AAC/B,WAAK,OAAO,iBAAiB,CAAC;AAAA,IAChC;AAEA,QAAI,CAAC,KAAK,OAAO,MAAM;AAGrB,cAAQ,IAAI,mBAAmB;AAAA,IACjC;AAEA,SAAK,gBAAgB,KAAK,kBAAkB;AAAA,EAC9C;AAAA,EAEQ,oBAAyC;AAC/C,UAAM,kBAAkB,IAAI,gCAAgB,IAAI;AAChD,UAAM,eAAe,gCAAgB;AAErC,WAAO,+BAAmB,kBAA4C;AAAA,MACpE,UAAU;AAAA,IACZ,CAAC,EACE,YAAsC,cAAc,eAAe,EACnE,MAAM;AAAA,EACX;AAAA,EAEA,MAAc,UAAyB;AACrC,UAAM,WAAW,KAAK,cAAc,QAAQ,4BAAgB;AAC5D,SAAK,oBAAoB,qBAAO,KAAK,QAAQ;AAE7C,UAAM,oBAAoB,MAAM,SAAS,6BAA6B;AAEtE,QAAI,mBAAmB;AACrB,YAAM,SAAS,WAAW;AAAA,IAC5B,OAAO;AACL,cAAQ,IAAI,8BAA8B;AAAA,IAE5C;AAAA,EACF;AAAA,EAEA,MAAc,SAAS,UAAqC;AAC1D,QAAI;AAIF,gBAAM;AAAA,QACJ,KAAK;AAAA,QACL,qBAAO,MAAM;AAAA,UACX,QAAQ,CAAC,OAAO,GAAG,cAAc;AAAA;AAAA,UACjC,QAAQ,MAAM,QAAQ,QAAQ;AAAA,QAChC,CAAC;AAAA,MACH;AAAA,IACF,UAAE;AACA,YAAM,KAAK,cAAc,QAAQ;AACjC,eAAS;AAAA,IACX;AAAA,EACF;AAAA,EAEA,MAAc,cAAc,IAAY,OAAyD;AAzFnG;AA0FI,YAAO,UAAK,aAAL,iBAAK,WAAa,KAAK,cAAc;AAAA,MAC1C,gCAAgB;AAAA,IAClB,GAAsB,mBAAmB,IAAI,KAAK;AAAA,EACpD;AACF;AAEA,IAAI,QAAQ,SAAS,QAAQ;AAC3B,SAAO,UAAU,CAAC,YAAuD,IAAI,MAAM,OAAO;AAC5F,OAAO;AACL,GAAC,MAAM,IAAI,MAAM,GAAG;AACtB;",
  "names": ["import_IoBroker"]
}
